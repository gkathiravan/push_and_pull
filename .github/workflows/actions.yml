name: Pull Request Details
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  print_details:
    runs-on: ubuntu-latest
    steps:
      - name: Print PR Details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Pull Request Details:"
          echo "---------------------"
          echo "Number: ${{ github.event.pull_request.number }}"
          echo "Title: ${{ github.event.pull_request.title }}"
          echo "Description: ${{ github.event.pull_request.body }}"
          echo "Author: ${{ github.event.pull_request.user.login }}"
          echo "URL: ${{ github.event.pull_request.html_url }}"
          echo "Branch Name : ${{ github.event.pull_request.head.ref }}"

          echo "---------------------"
  close-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Close Pull Request
        run: |
          # Extract the branch name from the ref
          # branch_name="${{ github.ref }}" # e.g., refs/heads/main
          # branch_name="${branch_name#refs/heads/}" # Get just the branch name
          
          # List open pull requests in the repository
          prs=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls?state=open")

          # Find the pull request associated with the current branch
          pr_number=$(echo "$prs" | jq -r ".[] | select(.head.ref == \"sample_branch_2\").number")

          if [ -n "$pr_number" ]; then
            # Close the pull request
            curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"state":"closed"}' "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # pull-and-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v2

  #     - name: pull changes from sample_branch_5
  #       env:
  #         TARGET_BRANCH: ${{ github.event.pull_request.head.ref }}
  #       run: |
  #         git config user.email "${{ github.event.pull_request.user.login }}@triconinfotech.com"
  #         git config user.name "${{ github.event.pull_request.user.login }}"
  #         git fetch origin
  #         git checkout sample_branch_1
  #         git merge origin/sample_branch_5 --no-commit --no-ff
  #         git commit -m "Merge changes from sample_branch_5 into sample_branch_1"
  #         git push origin sample_branch_1
          
  # delete-branch:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Check if the branch can be deleted
  #     run: |
  #       branch_name="${GITHUB_REF/refs\/heads\//}"
  #       if [[ "$branch_name" == "sample_branch_1" ]]; then
  #         echo "Main branch cannot be deleted."
  #         exit 1
  #       fi
  #       echo "Branch can be deleted."
  #     continue-on-error: true

  #   - name: Delete Branch
  #     run: |
  #       branch_name="sample_branch_5"
  #       git push origin --delete $branch_name
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # close-pr-and-delete-branch:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2

  #     - name: Close PR and Delete Branch
  #       run: |
  #         # # Extract the branch name from the ref
  #         # branch_name="${{ github.ref }}" # e.g., refs/heads/main
  #         # branch_name="${branch_name#refs/heads/}" # Get just the branch name
          
  #         # # Close the Pull Request associated with this branch
  #         # pr_number=$(hub pr list -h $branch_name -s open --format=%I)
  #         if [[ -n 6 ]]; then
  #           hub pr close 6
  #         fi
          
  #         # Delete the branch
  #         git push origin --delete $sample_branch_5

  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


          
  # pull-and-push:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout source branch
  #       uses: actions/checkout@v2
  #       with:
  #         ref: sample_branch_3

  #     - name: Configure Git
  #       run: |
  #         git config --global user.name "${{ github.event.pull_request.user.login }}"
  #         git config --global user.email "${{ github.event.pull_request.user.login }}@triconinfotech.com"
  #         git config pull.rebase false  # Merge divergent branches

  #     - name: Checkout target branch
  #       run: |
  #         git fetch origin
  #         git checkout sample_branch_1

  #     - name: Merge changes
  #       run: |
  #         git merge --no-ff sample_branch_3

  #     - name: Push changes to target branch
  #       run: git push origin sample_branch_1
  
